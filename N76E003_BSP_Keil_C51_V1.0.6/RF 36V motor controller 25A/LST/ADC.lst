C51 COMPILER V9.60.0.0   ADC                                                               11/01/2021 16:02:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Output\ADC.obj
COMPILER INVOKED BY: C:\keil5\C51\BIN\C51.EXE Code\ADC.C OPTIMIZE(2,SPEED) BROWSE INCDIR(..\Include) DEFINE(FOSC_160000)
                    - DEBUG OBJECTEXTEND PRINT(.\LST\ADC.lst) OBJECT(.\Output\ADC.obj)

line level    source

   1          #include "N76E003.h"
   2          #include "SFR_Macro.h"
   3          #include "Function_define.h"
   4          #include "Common.h"
   5          #include "Delay.h"
   6          #include "Motor_control.h"
   7          
   8          //*****************  The Following is in define in Fucntion_define.h  ***************************
   9          //****** Always include Function_define.h call the define you want, detail see main(void) *******
  10          //***********************************************************************************************
  11          #define CCvalue 0x14; //change the current regulation value
  12          #if 0
              //#define Enable_ADC_AIN0                       ADCCON0&=0xF0;P17_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT0;ADCCON1|=SET_BIT0   
             -                                                                //P17
              //#define Enable_ADC_AIN1                       ADCCON0&=0xF0;ADCCON0|=0x01;P30_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT1;ADCC
             -ON1|=SET_BIT0                //P30
              //#define Enable_ADC_AIN2                       ADCCON0&=0xF0;ADCCON0|=0x02;P07_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT2;ADCC
             -ON1|=SET_BIT0                //P07
              //#define Enable_ADC_AIN3                       ADCCON0&=0xF0;ADCCON0|=0x03;P06_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT3;ADCC
             -ON1|=SET_BIT0                //P06
              //#define Enable_ADC_AIN4                       ADCCON0&=0xF0;ADCCON0|=0x04;P05_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT4;ADCC
             -ON1|=SET_BIT0                //P05
              //#define Enable_ADC_AIN5                       ADCCON0&=0xF0;ADCCON0|=0x05;P04_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT5;ADCC
             -ON1|=SET_BIT0                //P04
              //#define Enable_ADC_AIN6                       ADCCON0&=0xF0;ADCCON0|=0x06;P03_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT6;ADCC
             -ON1|=SET_BIT0                //P03
              //#define Enable_ADC_AIN7                       ADCCON0&=0xF0;ADCCON0|=0x07;P11_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT7;ADCC
             -ON1|=SET_BIT0                //P11
              //#define Enable_ADC_BandGap    ADCCON0|=SET_BIT3;ADCCON0&=0xF8;                                                                                                                                                                                                                                                        //Band-gap 1.2
             -2V
              
              //#define PWM0_FALLINGEDGE_TRIG_ADC             ADCCON0&=~SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SE
             -T_BIT2;ADCCON1|=SET_BIT1
              //#define PWM2_FALLINGEDGE_TRIG_ADC             ADCCON0&=~SET_BIT5;ADCCON0|=SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SET
             -_BIT2;ADCCON1|=SET_BIT1
              //#define PWM4_FALLINGEDGE_TRIG_ADC             ADCCON0|=SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SET
             -_BIT2;ADCCON1|=SET_BIT1
              //#define PWM0_RISINGEDGE_TRIG_ADC              ADCCON0&=~SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_
             -BIT2;ADCCON1|=SET_BIT1
              //#define PWM2_RISINGEDGE_TRIG_ADC              ADCCON0&=~SET_BIT5;ADCCON0|=SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_B
             -IT2;ADCCON1|=SET_BIT1
              //#define PWM4_RISINGEDGE_TRIG_ADC              ADCCON0|=SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_B
             -IT2;ADCCON1|=SET_BIT1
              
              //#define P04_FALLINGEDGE_TRIG_ADC              ADCCON0|=0x30;ADCCON1&=0xF3;ADCCON1|=SET_BIT1;ADCCON1&=~SET_BIT6
              //#define P13_FALLINGEDGE_TRIG_ADC              ADCCON0|=0x30;ADCCON1&=0xF3;ADCCON1|=SET_BIT1;ADCCON1|=SET_BIT6
              //#define P04_RISINGEDGE_TRIG_ADC                       ADCCON0|=0x30;ADCCON1&=~SET_BIT3;ADCCON1|=SET_BIT2;ADCCON1|=SET_BIT1;A
             -DCCON1&=~SET_BIT6
              //#define P13_RISINGEDGE_TRIG_ADC                       ADCCON0|=0x30;ADCCON1&=~SET_BIT3;ADCCON1|=SET_BIT2;ADCCON1|=SET_BIT1;A
             -DCCON1|=SET_BIT6
              #endif
  35          
  36          /******************************************************************************
  37          The main C function.  Program execution starts
C51 COMPILER V9.60.0.0   ADC                                                               11/01/2021 16:02:35 PAGE 2   

  38          here after stack initialization.
  39          ******************************************************************************/
  40          
  41          void main (void) 
  42          {
  43   1              Set_All_GPIO_Quasi_Mode;                                //For GPIO1 output, Find in "Function_define.h" - "GPIO INIT"
  44   1              InitialUART0_Timer1(115200);
  45   1              ADC_Init();                                                     //
  46   1                                                                                      //reverved for timer_init   Sleep2
  47   1              PWM_Init();
  48   1              while(1)
  49   1              {
  50   2                      UINT8 i = Get_HallValue();
  51   2                      UINT8 j = Get_CurrentValue();
  52   2                      UINT16 pwm_step = (i-51)*2/3;  //13.3KHz
  53   2                      if(i>51)  //0x500 = 1280 = 1.56V
  54   2                      {
  55   3                              switch(j>57)//20A=57
  56   3                              {
  57   4                                      case 0:
  58   4                                      {       
  59   5                                              //UINT16 pwm_step = (i-0x3e8)/0x1E; //1.0->4.0
  60   5                                              PWM_Setting(pwm_step);
  61   5                                              set_P00;                //Forward Relay open 
  62   5                                              Timer0_Delay1ms(20);
  63   5                                      }
  64   4                                      break;
  65   4                                      case 1:
  66   4                                      {
  67   5                                              j=j*0.35;// Current calculation from current shunt-> OA-> ADC j=actural current
  68   5                                              PWM4L=(PWM4L+Incremental_P(j, 20)*3/2)>50? (PWM4L+Incremental_P(j, 20)*3/2):0;;//PWM delta value
  69   5                                              set_LOAD;set_PWMRUN;
  70   5                                              
  71   5      //                                      PWM_Setting(PWM4L+(Incremental_P(j, 20)*3/2));
  72   5                                              set_P00;                //Forward Relay open 
  73   5      //                                      PWM4L=PWM4L>50?PWM4L-1:0;
  74   5      //                                      set_LOAD;set_PWMRUN;
  75   5                                              Timer0_Delay1ms(20);
  76   5                                              j=0;
  77   5                                      }
  78   4                                      break;
  79   4                                      default:
  80   4                                              break;
  81   4                              }
  82   3                      }
  83   2                      else
  84   2                      {
  85   3                              PWM_Setting(0x00);
  86   3                              //PWM4L = 0x97;
  87   3                              Timer0_Delay1ms(1000);
  88   3                              clr_P00;
  89   3                      }               
  90   2      
  91   2              }
  92   1      }
  93          
  94          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    303    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.0.0   ADC                                                               11/01/2021 16:02:35 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
