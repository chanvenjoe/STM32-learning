C51 COMPILER V9.60.0.0   ADC                                                               05/04/2022 23:31:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\ADC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\src\ADC.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\code\inc) DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\ADC.lst) OBJECT(.\Objects\ADC.obj)

line level    source

   1          #include "ADC.h"
   2          
   3          
   4          
   5          
   6          /*********************************************
   7          Function: get_ADC_Value;
   8          DESC: get ADC value from specific channel;
   9          Input: channel;
  10          Output: NA;
  11          Return: ADC reading from specific;
  12          **********************************************/
  13          static unsigned int get_ADC_Value(unsigned int Channel){
  14   1                      
  15   1                              if(Channel==0)
  16   1                              {
  17   2                                              UINT16 sumThrottle=0;
  18   2                                              UINT8 i;
  19   2                                              Enable_ADC_AIN0;    //P17 throttle AIN0
  20   2                                              clr_ADCF;                                               //clear the ADC flag 
  21   2                                              set_ADCS;                                       //start the ADC reading
  22   2                                              EADC=0;                                                 //disable the interruption
  23   2                                              
  24   2                                              for(i=0; i<8; i++){
  25   3                                                                      sumThrottle+=((ADCRH<<4)+ADCRL);
  26   3                                              }
  27   2                                              Disable_ADC;
  28   2                                              return sumThrottle>>3;
  29   2                              }else
  30   1                              if(Channel==1)
  31   1                              {
  32   2                                              UINT16 sumFB=0;
  33   2                                              UINT8 i;
  34   2                                              Enable_ADC_AIN1;    //P17 throttle AIN1
  35   2                                              clr_ADCF;                                               //clear the ADC flag 
  36   2                                              set_ADCS;                                       //start the ADC reading
  37   2                                              EADC=0;                                                 //disable the interruption
  38   2                                              
  39   2                                              for(i=0; i<8; i++){
  40   3                                                                      sumFB+=((ADCRH<<4)+ADCRL);
  41   3                                              }
  42   2                                              Disable_ADC;
  43   2                                              return sumFB>>3;
  44   2                              }else
  45   1                              if(Channel==4)
  46   1                              {       
  47   2                                              UINT16 sumCurrent=0;
  48   2                                              UINT8 i;
  49   2                                              Enable_ADC_AIN4;    //P17 throttle AIN0
  50   2                                              clr_ADCF;                                               //clear the ADC flag 
  51   2                                              set_ADCS;                                       //start the ADC reading
  52   2                                              EADC=0;                                                 //disable the interruption
  53   2                                              
  54   2                                              for(i=0; i<8; i++){
C51 COMPILER V9.60.0.0   ADC                                                               05/04/2022 23:31:28 PAGE 2   

  55   3                                                                      sumCurrent+=((ADCRH<<4)+ADCRL);
  56   3                                              }
  57   2                                              Disable_ADC;
  58   2                                              return sumCurrent>>3;
  59   2                              }else
  60   1                              if(Channel==7)
  61   1                              {
  62   2                                              UINT16 sumVoltage=0;
  63   2                                              UINT8 i;
  64   2                                              Enable_ADC_AIN7;    //P17 throttle AIN0
  65   2                                              clr_ADCF;                                               //clear the ADC flag 
  66   2                                              set_ADCS;                                       //start the ADC reading
  67   2                                              EADC=0;                                                 //disable the interruption
  68   2                                              
  69   2                                              for(i=0; i<8; i++){
  70   3                                                                      sumVoltage+=((ADCRH<<4)+ADCRL);
  71   3                                              }
  72   2                                              Disable_ADC;
  73   2                                              return sumVoltage>>3;
  74   2                              }else
  75   1                              
  76   1                              return 0;
  77   1      
  78   1      }
  79          
  80          
  81          
  82          /*********************************************
  83          Function: ADC_Refresh;
  84          DESC: Refresh the ADC voltage for gear, throttle, current and bus voltage;
  85          Input: NA;
  86          Output: Update the ADC value in tADC;
  87          Return: NA;
  88          **********************************************/
  89          void ADC_Refresh(void)
  90          {
  91   1                      UINT16 Temp;
  92   1                      Temp = tSysClock.ADCCount;
  93   1                      
  94   1                      if (Temp!= tADC.Count)
  95   1                      {
  96   2                              tADC.Count = Temp;
  97   2                              switch(Temp)
  98   2                              {
  99   3                                      case 0:tADC.Reading_ThrottleVol=get_ADC_Value(ChannelThrottle);
 100   3                                                      break;
 101   3                                      case 2:tADC.Reading_FBVol=get_ADC_Value(ChannelFB);
 102   3                                                      break;
 103   3                                      case 4:tADC.Reading_Current=get_ADC_Value(ChannelCurrent);
 104   3                                                      break;
 105   3                                      case 6:tADC.Reading_Voltage=get_ADC_Value(ChannelVoltage);
 106   3                                                      break;
 107   3                              }
 108   2                      }
 109   1      }
 110          
 111          
 112                          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    480    ----
C51 COMPILER V9.60.0.0   ADC                                                               05/04/2022 23:31:28 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
