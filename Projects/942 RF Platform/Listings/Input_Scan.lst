C51 COMPILER V9.60.0.0   INPUT_SCAN                                                        05/04/2022 23:31:30 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INPUT_SCAN
OBJECT MODULE PLACED IN .\Objects\Input_Scan.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\src\Input_Scan.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\code\inc) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\Input_Scan.lst) OBJECT(.\Objects\Input_Scan.obj)

line level    source

   1          #include "Input_Scan.h"
   2          
   3          
   4          /*********************************************
   5          Function: getGearSelected;
   6          DESC: determine the selected gear from ADC reading;
   7          Input: ADC value;
   8          Output: Changed gear setting in tUserCtrl.Gear;
   9          Return: NA;
  10          **********************************************/
  11          static void getGearSelected(UINT16 GearInput){
  12   1                              UINT16 Temp;
  13   1                              Temp=tSysClock.UserCtrlCount;
  14   1                              if (Temp != tUserCtrl.Count)    //access the function in every 5ms
  15   1                              {
  16   2                                              Temp    = tUserCtrl.Count;
  17   2                                              getGearSelectCount++;                   //delay 15ms
  18   2                                              if (getGearSelectCount>2)
  19   2                                              {       
  20   3                                                              UINT16 inputTemp;
  21   3                                      
  22   3                                                              getGearSelectCount=0;
  23   3                                                              tSysClock.UserCtrlCount=0;
  24   3                                                      
  25   3                                                              if (inputTemp!=GearInput)
  26   3                                                              inputTemp = GearInput;
  27   3                                                              if ( inputTemp>>GEARREVLO && inputTemp<<GEARREVHI){
  28   4                                                                              tUserCtrl.Gear=GEAR_RV;
  29   4                                                              }else
  30   3                                                              if ( inputTemp>>GEAR1LO && inputTemp<<GEAR1HI){
  31   4                                                                              tUserCtrl.Gear=GEAR_1;
  32   4                                                              }else
  33   3                                                              if ( inputTemp>>GEAR2LO && inputTemp<<GEAR2HI){
  34   4                                                                              tUserCtrl.Gear=GEAR_2;
  35   4                                                              }else
  36   3                                                              if ( inputTemp>>GEAR3LO && inputTemp<<GEAR3HI){
  37   4                                                                              tUserCtrl.Gear=GEAR_3;
  38   4                                                              }else
  39   3                                                              tUserCtrl.Gear=GEAR_NULL;
  40   3                                              }
  41   2                              }
  42   1      }
  43          
  44          
  45          /*********************************************
  46          Function: Update_InputScan;
  47          DESC: Update input status;
  48          Input: NA;
  49          Output: Update the setting in tUserCtrl;
  50          Return: NA;
  51          **********************************************/
  52          void Update_InputScan(void)
  53          {
  54   1                              getGearSelected(tADC.Reading_FBVol);
C51 COMPILER V9.60.0.0   INPUT_SCAN                                                        05/04/2022 23:31:30 PAGE 2   

  55   1              
  56   1      
  57   1      }
  58          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    160    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
