<<<<<<< Updated upstream
C51 COMPILER V9.60.0.0   ADC                                                               02/23/2022 14:16:58 PAGE 1   
=======
C51 COMPILER V9.60.0.0   ADC                                                               02/22/2022 16:08:49 PAGE 1   
>>>>>>> Stashed changes


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Output\ADC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\ADC.C OPTIMIZE(6,SPEED) BROWSE INCDIR(..\..\Include) DEFINE(FOSC_16
                    -0000) DEBUG OBJECTEXTEND PRINT(.\LST\ADC.lst) OBJECT(.\Output\ADC.obj)

line level    source

*** WARNING C500 IN LINE 1 OF Code\ADC.C: INCORRECT LICENSE ID CODE (LIC) IN 'TOOLS.INI'
   1          #include "N76E003.h"
   2          #include "SFR_Macro.h"
   3          #include "Function_define.h"
   4          #include "Common.h"
   5          #include "Delay.h"
   6          #include "Motor_control.h"
   7          #include "Speed_display.h"
   8          
   9          //*****************  The Following is in define in Fucntion_define.h  ***************************
  10          //****** Always include Function_define.h call the define you want, detail see main(void) *******
  11          //***********************************************************************************************
  12          #define CCvalue 0x14; //change the current regulation value
  13          
  14          #define Not_Pressed PWM5_P03_OUTPUT_DISABLE; PWM4_P01_OUTPUT_DISABLE; clr_P01; set_P03;
  15          #define Pressed PWM5_P03_OUTPUT_ENABLE; PWM4_P01_OUTPUT_ENABLE;
  16          #if 0
              //#define Enable_ADC_AIN0                       ADCCON0&=0xF0;P17_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT0;ADCCON1|=SET_BIT0   
             -                                                                //P17
              //#define Enable_ADC_AIN1                       ADCCON0&=0xF0;ADCCON0|=0x01;P30_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT1;ADCC
             -ON1|=SET_BIT0                //P30
              //#define Enable_ADC_AIN2                       ADCCON0&=0xF0;ADCCON0|=0x02;P07_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT2;ADCC
             -ON1|=SET_BIT0                //P07
              //#define Enable_ADC_AIN3                       ADCCON0&=0xF0;ADCCON0|=0x03;P06_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT3;ADCC
             -ON1|=SET_BIT0                //P06
              //#define Enable_ADC_AIN4                       ADCCON0&=0xF0;ADCCON0|=0x04;P05_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT4;ADCC
             -ON1|=SET_BIT0                //P05
              //#define Enable_ADC_AIN5                       ADCCON0&=0xF0;ADCCON0|=0x05;P04_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT5;ADCC
             -ON1|=SET_BIT0                //P04
              //#define Enable_ADC_AIN6                       ADCCON0&=0xF0;ADCCON0|=0x06;P03_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT6;ADCC
             -ON1|=SET_BIT0                //P03
              //#define Enable_ADC_AIN7                       ADCCON0&=0xF0;ADCCON0|=0x07;P11_Input_Mode;AINDIDS=0x00;AINDIDS|=SET_BIT7;ADCC
             -ON1|=SET_BIT0                //P11
              //#define Enable_ADC_BandGap    ADCCON0|=SET_BIT3;ADCCON0&=0xF8;                                                                                                                                                                                                                                                        //Band-gap 1.2
             -2V
              
              //#define PWM0_FALLINGEDGE_TRIG_ADC             ADCCON0&=~SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SE
             -T_BIT2;ADCCON1|=SET_BIT1
              //#define PWM2_FALLINGEDGE_TRIG_ADC             ADCCON0&=~SET_BIT5;ADCCON0|=SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SET
             -_BIT2;ADCCON1|=SET_BIT1
              //#define PWM4_FALLINGEDGE_TRIG_ADC             ADCCON0|=SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1&=~SET
             -_BIT2;ADCCON1|=SET_BIT1
              //#define PWM0_RISINGEDGE_TRIG_ADC              ADCCON0&=~SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_
             -BIT2;ADCCON1|=SET_BIT1
              //#define PWM2_RISINGEDGE_TRIG_ADC              ADCCON0&=~SET_BIT5;ADCCON0|=SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_B
             -IT2;ADCCON1|=SET_BIT1
              //#define PWM4_RISINGEDGE_TRIG_ADC              ADCCON0|=SET_BIT5;ADCCON0&=~SET_BIT4;ADCCON1&=~SET_BIT3;ADCCON1|=SET_B
             -IT2;ADCCON1|=SET_BIT1
              
              //#define P04_FALLINGEDGE_TRIG_ADC              ADCCON0|=0x30;ADCCON1&=0xF3;ADCCON1|=SET_BIT1;ADCCON1&=~SET_BIT6
              //#define P13_FALLINGEDGE_TRIG_ADC              ADCCON0|=0x30;ADCCON1&=0xF3;ADCCON1|=SET_BIT1;ADCCON1|=SET_BIT6
              //#define P04_RISINGEDGE_TRIG_ADC                       ADCCON0|=0x30;ADCCON1&=~SET_BIT3;ADCCON1|=SET_BIT2;ADCCON1|=SET_BIT1;A
             -DCCON1&=~SET_BIT6
              //#define P13_RISINGEDGE_TRIG_ADC                       ADCCON0|=0x30;ADCCON1&=~SET_BIT3;ADCCON1|=SET_BIT2;ADCCON1|=SET_BIT1;A
<<<<<<< Updated upstream
             -DCCON1|=SET_BIT6
C51 COMPILER V9.60.0.0   ADC                                                               02/23/2022 14:16:58 PAGE 2   
=======
C51 COMPILER V9.60.0.0   ADC                                                               02/22/2022 16:08:49 PAGE 2   
>>>>>>> Stashed changes

             -DCCON1|=SET_BIT6
              #endif
  39          
  40          /******************************************************************************
  41          The main C function.  Program execution starts
  42          here after stack initialization.
  43          ******************************************************************************/
<<<<<<< Updated upstream
  44          float IC0_value;
  45          unsigned int IC0_value_sum;
  46          void Capture_ISR(void) interrupt 12
  47          {
  48   1              clr_CAPF0;
  49   1              IC0_value = (C0H<<8)+C0L; //uS value 
  50   1              //IC0_value = (1/(IC0_value*2/1000000))*0.05;//3600/60.67*3.14*0.27/1000;
  51   1              IC0_value_sum+=IC0_value;
  52   1              clr_TF2;
  53   1      }
  54          void main (void) 
  55          {
  56   1              Set_All_GPIO_Quasi_Mode;                        //For GPIO1 output, Find in "Function_define.h" - "GPIO INIT"
  57   1              P00_PushPull_Mode;
  58   1              P01_PushPull_Mode;
  59   1              P02_PushPull_Mode;
  60   1              P03_PushPull_Mode;
  61   1              P04_PushPull_Mode;
  62   1              P05_PushPull_Mode;
  63   1              P06_PushPull_Mode;
  64   1              P07_PushPull_Mode;
  65   1              P10_PushPull_Mode;
  66   1              P11_PushPull_Mode;
  67   1              P12_PushPull_Mode;
  68   1              P13_PushPull_Mode;
  69   1              InitialUART0_Timer1(115200);
=======
  44          int IC0_value[10];
  45          void Capture_ISR(void) interrupt 12
  46          {
  47   1              u8 i=0;
  48   1              clr_CAPF0;//Clear capture flag
  49   1              if(++i<=10) i=0;
  50   1              IC0_value[i] = (C0H<<4)||C0L;
  51   1      }
  52          
  53          void main (void) 
  54          {
  55   1              Set_All_GPIO_Quasi_Mode;                        //For GPIO1 output, Find in "Function_define.h" - "GPIO INIT"
  56   1              P00_PushPull_Mode;
  57   1              P01_PushPull_Mode;
  58   1              P02_PushPull_Mode;
  59   1              P03_PushPull_Mode;
  60   1              P04_PushPull_Mode;
  61   1              P05_PushPull_Mode;
  62   1              P06_PushPull_Mode;
  63   1              P07_PushPull_Mode;
  64   1              P10_PushPull_Mode;
  65   1              P11_PushPull_Mode;
  66   1              P12_PushPull_Mode;
  67   1              P13_PushPull_Mode;
  68   1              InitialUART0_Timer1(115200);
  69   1              
>>>>>>> Stashed changes
  70   1              P15_Input_Mode;
  71   1              P15=1;
  72   1              
  73   1              TIMER2_CAP0_Capture_Mode;
<<<<<<< Updated upstream
  74   1              TIMER2_DIV_16;
  75   1              //IC7_P15_CAP0_RisingEdge_Capture;
  76   1              //IC7_P15_CAP0_BothEdge_Capture;
  77   1              IC7_P15_CAP0_FallingEdge_Capture;
  78   1              set_ECAP;
  79   1              set_TR2;
  80   1              set_EA;
  81   1              ADC_Init();                                                     //
  82   1                                                                                      //reverved for timer_init   Sleep2
  83   1      //      PWM_Init();
  84   1              while(1)
  85   1              {
  86   2                      float IC0_value_show = IC0_value;
  87   2                      float IC0_value_last;
  88   2                      
  89   2                      IC0_value_show = 1000000/IC0_value_show;
  90   2      //              IC0_value_show = (1/(IC0_value_show*2/1000000))*0.05;//3600/60.67*3.14*0.27/1000;
  91   2                      if(IC0_value_show>0&&IC0_value_show<0xfff)
  92   2                      {
  93   3                              numb_show(IC0_value_show);
  94   3                      }
  95   2                      else
  96   2                      {
  97   3                              numb_show(0);
  98   3                      }
  99   2              }
C51 COMPILER V9.60.0.0   ADC                                                               02/23/2022 14:16:58 PAGE 3   

 100   1      }
*** WARNING C280 IN LINE 87 OF Code\ADC.C: 'IC0_value_last': unreferenced local variable
 101          
 102          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    356    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
=======
  74   1              IC7_P15_CAP0_RisingEdge_Capture;
  75   1              set_ECAP;
  76   1              set_TR2;
  77   1              set_EA;
  78   1              ADC_Init();                                                     //
  79   1                                                                                      //reverved for timer_init   Sleep2
  80   1      //      PWM_Init();
  81   1              while(1)
  82   1              {
  83   2                      //UINT8 i = Get_HallValue();// can use public structure or ...
  84   2                      if(i>0)
*** ERROR C202 IN LINE 84 OF Code\ADC.C: 'i': undefined identifier
  85   2                      {
  86   3                              numb_show(i);
*** ERROR C202 IN LINE 86 OF Code\ADC.C: 'i': undefined identifier
  87   3                      }
  88   2                      else
  89   2                      {
  90   3                              numb_show(0);
  91   3                      }
  92   2              }
  93   1      }
  94          
  95          

C51 COMPILATION COMPLETE.  1 WARNING(S),  2 ERROR(S)
>>>>>>> Stashed changes
