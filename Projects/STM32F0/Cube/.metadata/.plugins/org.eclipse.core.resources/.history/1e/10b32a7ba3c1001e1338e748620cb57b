/*
 * sw_spi.c
 *
 *  Created on: Jan 31, 2024
 *      Author: kzhou
 */
#include "sw_spi.h"

unsigned int Get_24bit_Weight(char channel_gain)
{
	unsigned int weight=0;
	SW_SPI_PWR_ON; //Pull down clk

	while(SW_SPI_DAT_RDY)
	{
		SW_SPI_CLK_H;
//		delay_us(1);
		SW_SPI_CLK_L;
	}

	for(char i = 24; i!=0; i--)
	{
		SW_SPI_CLK_H;
		weight = weight<<1;
	//	delay_us(1);
		SW_SPI_CLK_L;
		if(SW_SPI_DAT_RDY)
		{
		 weight+=1;
		}
		delay_us(1);
	}
	SW_SPI_CLK_H;
//	delay_us(1);
	weight = weight^0x800000;
	SW_SPI_CLK_L;

	//Preserved for channel selection

	return weight;
}

void Get_weight(HX711_Structure* weight_par)		// AKg * AVDDmV/X Kg = Y   A:weight AVDD:sensor power X:max weight of load cell Y:AD reading from module
{													// Example: A Kg * 3.24mV/10Kg => A*128 = 0.324*128AmV = 41.472AmV  => 41.472AmV/AD = 3.24V/0xffffff => AD = 214748.352A A g = AD/214.748
	weight_par->weight = Get_24bit_Weight(CHA_128);
	if(weight_par->weight>weight_par->gross_weight)
	{
		weight_par->weight = weight_par->weight; //- weight_par.gross_weight;



		//Kalman  filter
	}
}

void HX711_Calibration(HX711_Structure* weight_par)
{
	  /*******Get gross weight**************/
	  SW_SPI_PWR_OFF;
	  delay_us(200);
	  SW_SPI_PWR_ON;
	  weight_par->gross_weight = Get_24bit_Weight(CHA_128);
	  delay_us(2000);
	  weight_par->gross_weight = Get_24bit_Weight(CHA_128);
	  printf("gross weight:%d", weight_par->gross_weight);
	  weight_par->calibration_flag = 1; //Calibration done

}



