#ifndef __WS2811_H
#define __WS2811_H

#include "main.h"
#include "FreeRTOS.h"
//#include "sys.h"
//#include "delay.h"

#define u32 unsigned int
#define u16 unsigned int
#define u8	unsigned char

#define WS_LED_PORT GPIOA

#define delay 60ns 	__HAL_TIM_SET_COUNTER(&htim14, 0);  while (__HAL_TIM_GET_COUNTER(&htim14) < 35);
#define delay_600ns __HAL_TIM_SET_COUNTER(&htim14, 0);  while (__HAL_TIM_GET_COUNTER(&htim14) < 70);
#define delay_50us  __HAL_TIM_SET_COUNTER(&htim14, 0);  while (__HAL_TIM_GET_COUNTER(&htim14) < 5000);

#define T0H 	GPIOA->BSRR = WS_LED_Pin;						delay_60ns;//220-380ns
#define T0L 	GPIOA	->BSRR = (uint32_t)WS_LED_Pin << 16U;	delay_600ns//580-1us
#define T1H 	GPIOA->BSRR = WS_LED_Pin;						delay_600ns//580-1
#define T1L 	GPIOA	->BSRR = (uint32_t)WS_LED_Pin << 16U;	delay_60ns;//220-420
#define RES 	GPIOA	->BSRR = (uint32_t)WS_LED_Pin << 16U;	delay_50us;//GPIOA->BSRR = WS_LED_Pin;
#define TEST_delay delay_60ns
#define CODE_0 T0H T0L
#define CODE_1 T1H T1L
#define LEDNUM 		4

typedef struct color
{
	u32 RGB; 
	u8 R;
	u8 G;
	u8 B;
}Color_Typedef;

#define White       0xFFFFFF
#define Black       0x000000
#define Green       0x00ff00
#define Red	        0xff0000
#define Blue        0x0000ff
#define cmp = 		0x00800000;
#define dummy		0x000000

void WS_Send24bits(u32 color);
void WS_ColorSet_LED(u8 from, u8 to, u32 color);
void WS_Color_copy(u8 No, u32 color);
void WS_Refresh(void);
void WS_Key_RGB(void);
void WS_Hue_change(void);
u8	Get_RGB_Max(u8 R, u8 G, u8 B);
u8	Get_RGB_Min(u8 R, u8 G, u8 B);
u8	Get_Hue_Val(u8 R, u8 G, u8 B);
u32 HSV_RGB(int h, char s, char v, float R, float G, float B);
void TPAD_Reset(void);
u32 TPAD_Get_Val(void);
u32 CapacitiveTouch_Init(u32 psc);
u32 TPAD_Get_MaxVal(u8 sampt);
u8 TPAD_Scan(u8 mode,u32 tpad_average1);
void Tpad_IOInit(u32 psc);

enum Hue_formular
{
	Non=0,First, Second, Third, Fourth, Fifth
};

//struct
//{
//	u16 h;
//	float s;
//	float v;
//}HSV;

#endif
