C51 COMPILER V9.60.0.0   WS2811                                                            05/17/2022 21:38:53 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE WS2811
OBJECT MODULE PLACED IN .\Objects\WS2811.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Functions\WS2811.c LARGE ROM(COMPACT) OPTIMIZE(5,SPEED) BROWSE INCDIR(..
                    -\Include) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Listings\WS2811.lst) OBJECT(.\Objects\WS2811.obj)

line level    source

   1          #include "WS2811.h"
   2          #include "N76E003.h"
   3          #include "Motor_control.h"
   4          
   5          /***********TYPE DEFINE****************/
   6          
   7          
   8          
   9          /***********VARIABLE DEFINE************/
  10          
  11          /***********Constant variable**********/
  12          
  13          #define RGB_HSV 0               //1 to enable transformation  code
  14          /**************************************/
  15          
  16          Color_Typedef LED_Buf[LEDNUM+1];
  17          
  18          void WS_Send24bits(u32 color)//Be Careful about the direction of rope: Din->Dout
  19          {
  20   1              u8 i;
  21   1              for(i=0;i<24;i++)
  22   1              {
  23   2                      if(color & 0x00800000)// 0000 0000 1000 0000... the highest bit & color, then the MCU can send 24bits da
             -ta to WS2812
  24   2                      {
  25   3                              CODE_1
  26   3                      }
  27   2                      else CODE_0
  28   2                      color<<=1;
  29   2              }
  30   1      }
  31          
  32          void WS_Color_copy(u8 No, u32 color)
  33          {
  34   1              LED_Buf[No].RGB = color;
  35   1      }
  36          
  37          void WS_ColorSet_LED(u8 from, u8 to, u32 color)
  38          {
  39   1              static int temp;
  40   1              if(to>LEDNUM||from<0)
  41   1              {
  42   2                      to=LEDNUM;
  43   2                      from=0;
  44   2              }
  45   1              color &= 0x00ffffff;// remove the effect of [32-25]
  46   1              if(from>to)
  47   1              {
  48   2                      temp=from; from=to; to=temp;
  49   2              }
  50   1              for(temp = from;temp<=to; temp++)
  51   1              {
  52   2                      WS_Color_copy(temp, color);
  53   2              }
C51 COMPILER V9.60.0.0   WS2811                                                            05/17/2022 21:38:53 PAGE 2   

  54   1      }
  55          
  56          void WS_Refresh()
  57          {
  58   1              u8 i;
  59   1      //      WS_Send24bits(dummy);
  60   1              for( i=0;i<=LEDNUM;i++)
  61   1              {
  62   2                      WS_Send24bits(LED_Buf[i].RGB);
  63   2              }
  64   1              RES
  65   1      }
  66          
  67          void WS_Key_RGB(void)
  68          {
  69   1              static u8 temp = 0;
  70   1              switch (temp)
  71   1              {
  72   2                      case 0:
  73   2                              WS_ColorSet_LED(0, LEDNUM, Black);
  74   2                              WS_Refresh();
  75   2                              WS_ColorSet_LED(0, 3, Red);
  76   2                              WS_Refresh();
  77   2                              break;
  78   2                      case 1:
  79   2                              WS_ColorSet_LED(0, LEDNUM, Black);
  80   2                              WS_Refresh();
  81   2                              WS_ColorSet_LED(4, 6, Blue);
  82   2                              WS_Refresh();
  83   2                              break;
  84   2                      case 2:
  85   2                              WS_ColorSet_LED(0, LEDNUM, Black);
  86   2                              WS_Refresh();
  87   2                              WS_ColorSet_LED(7,10, Green);
  88   2                              WS_Refresh();
  89   2                              break;
  90   2              }
  91   1              temp++;
  92   1              if(temp>2)
  93   1                      temp = 0;
  94   1                              
  95   1                      
  96   1      //              WS_Refresh();
  97   1                      Timer0_Delay1ms(50);
  98   1      }
  99          
 100          
 101          void WS_Hue_change()
 102          {
 103   1              u8 cylon=160;
 104   1              u8 cycle;
 105   1              static u8 flag=1;
 106   1      //      u32 temp;
 107   1              if(h>=0&&h<360)
 108   1              {
 109   2                      if(flag)
 110   2                      {
 111   3                              WS_ColorSet_LED(0, LEDNUM, HSV_RGB(h, 1,1,0,0,0));
 112   3                              WS_Refresh();
 113   3                              h+=HSV_Ch_Sp;
 114   3                              Timer0_Delay1ms(50);
 115   3                              if(h>=360){
C51 COMPILER V9.60.0.0   WS2811                                                            05/17/2022 21:38:53 PAGE 3   

 116   4                                      flag=0;
 117   4                              }
 118   3                      }
 119   2                      else
 120   2                      {
 121   3                              for(cycle=0;cycle<=LEDNUM;cycle++)
 122   3                              {
 123   4                                      WS_ColorSet_LED(0, cycle, HSV_RGB(h, 1,1,0,0,0));
 124   4                                      Timer0_Delay1ms(HSV_Delay1ms);
 125   4                              }
 126   3                              WS_Refresh();
 127   3                              h-=HSV_Ch_Sp;
 128   3                              if(h<=0)
 129   3                                      flag=1;
 130   3                      }
 131   2                              
 132   2              }
 133   1              else
 134   1                      h=0;
 135   1      }
 136          
 137          
 138          #if(RGB_HSV)
              u8      Get_RGB_Max(u8 R, u8 G, u8 B)
              {
                      u8 Max=R;
                      if(Max<G)
                      {
                              Max=G;
                      }
                      if(Max<B)
                      {
                              Max=B;
                      }
                      return Max;
              }
              u8      Get_RGB_Main(u8 R, u8 G, u8 B)
              {
                      u8 Min=R;
                      if(Min>G)
                      {
                              Min=G;
                      }
                      if(Min>B)
                      {
                              Min=B;
                      }
                      return Min;
              }
              
              u8      Get_Hue_Val(u8 R, u8 G, u8 B)
              {
                      u8 Max, Min,Num,Hue;
                      Max = Get_RGB_Max(R,G,B);
                      Min = Get_RGB_Min(R,G,B);
                      if(Max==Min)
                      {
                              Num=First;
                      }
                      else if(Max==R&&(G>=B))
                      {
                              Num=Second;
C51 COMPILER V9.60.0.0   WS2811                                                            05/17/2022 21:38:53 PAGE 4   

                      }
                      else if(Max==R&&(G<B))
                      {
                              Num=Third;
                      }
                      else if(Max==G)
                      {
                              Num=Fourth;
                      }
                      else if(Max==B)
                      {
                              Num=Fifth;
                      }
                      else
                      {
                              Num=Non;
                      }
                      switch(Num)
                      {
                              case 0:
                              break;
                              case 1:
                                      Hue=0;
                              break;
                              case 2:
                                      Hue=60*((R-G)/(Max-Min));
                              break;
                              case 3:
                                      Hue=60*((R-G)/(Max-Min))+360;
                              break;
                              case 4:
                                      Hue=60*((R-G)/(Max-Min))+120;
                              break;
                              case 5:
                                      Hue=60*((R-G)/(Max-Min))+240;
                              break;
                      }
                      return Hue;
              }
              #else
 218          u32 HSV_RGB(int h, char s, char v, float R, float G, float B)
 219          {
 220   1              u32 RGB;
 221   1              u8 R8,G8,B8;
 222   1              char  i;
 223   1              float X,Y,Z,C;
 224   1              i = h/60;               //char i
 225   1              C = h;          //float C
 226   1              C = C/60-i;
 227   1              X = v*(1-s);
 228   1              Y = v*(1-(s*C));
 229   1              Z = v*(1-s*(1-C)); 
 230   1              
 231   1              switch(i)
 232   1              {
 233   2                      case 0:
 234   2                              R=v; G=Z; B=X;
 235   2                              break;
 236   2                      case 1:
 237   2                              R=Y; G=v; B=X;
 238   2                              break;
 239   2                      case 2:
C51 COMPILER V9.60.0.0   WS2811                                                            05/17/2022 21:38:53 PAGE 5   

 240   2                              R=X; G=v; B=Z;
 241   2                              break;
 242   2                      case 3:
 243   2                              R=X; G=Y; B=v;
 244   2                              break;
 245   2                      case 4:
 246   2                              R=Z; G=X; B=v;
 247   2                              break;
 248   2                      case 5:
 249   2                              R=v; G=X; B=Y;
 250   2                              break;
 251   2              }
 252   1      #if WS2812B
 253   1                      G8=R*255;
 254   1                      R8=G*255;
 255   1                      B8=B*255;
 256   1      #else
                              R8=R*255;
                              G8=G*255;
                              B8=B*255;
              #endif
 261   1              RGB&=0x00000000;
 262   1              RGB|=R8;
 263   1              RGB<<=8;
 264   1              RGB|=G8;
 265   1              RGB<<=8;
 266   1              RGB|=B8;
 267   1              return RGB;
 268   1      }
 269          void WS_voice_Pik(u8 mode) //Mode0: all LED together Mode1:LED light up corresponding number according to 
             -the dB
 270          {
 271   1              u8 dB;
 272   1              u32 color=0;
 273   1              dB = Get_HallValue();
 274   1              if(mode==0)
 275   1              {
 276   2                      if(dB>=30&&dB<100)
 277   2                      {
 278   3                              color = Black|(dB*2);
 279   3                              WS_ColorSet_LED(0,LEDNUM,color);
 280   3                              WS_Refresh();
 281   3                              Timer1_Delay10ms(30);
 282   3                              while(color)
 283   3                              {
 284   4                                      color = (color-FadeoutTime)>FadeoutTime? color-FadeoutTime:0;
 285   4                                      WS_ColorSet_LED(0,LEDNUM,color);
 286   4                                      WS_Refresh();
 287   4                              }
 288   3                      }
 289   2                      else if(dB>=100)
 290   2                      {
 291   3                              color = Black|dB;
 292   3                              color = LED_type? color<<8:color<<16;
 293   3                              WS_ColorSet_LED(0,LEDNUM,color);
 294   3                              WS_Refresh();
 295   3                              Timer1_Delay10ms(30);
 296   3                              while(dB)
 297   3                              {
 298   4                                      dB = (dB-FadeoutTime)>FadeoutTime? dB-FadeoutTime:0;
 299   4                                      color = Black|dB;
 300   4                                      color = LED_type? color<<8:color<<16;
C51 COMPILER V9.60.0.0   WS2811                                                            05/17/2022 21:38:53 PAGE 6   

 301   4                                      WS_ColorSet_LED(0,LEDNUM,color);
 302   4                                      WS_Refresh();
 303   4                              }
 304   3                      }
 305   2                      else
 306   2                      {
 307   3                              WS_ColorSet_LED(0,LEDNUM,0x000000);
 308   3                              WS_Refresh();
 309   3                              Timer1_Delay10ms(5);                    
 310   3                      }
 311   2              }
 312   1              else//Reactive mode
 313   1              {
 314   2                      WS_ColorSet_LED(0, LEDNUM, Black);
 315   2                      if(dB>=25)
 316   2                      {
 317   3                              u8 Light_up;
 318   3                              u8 arr;
 319   3                              Light_up=((dB*LEDARR)/150)>8?8:((dB*LEDARR)/150);//The power supply is not 5V so the ADC value can not 
             -reach 255
 320   3                              for(arr=0;arr<LEDARR;arr++)
 321   3                              {
 322   4                                      WS_ColorSet_LED(0+arr*LEDARR, Light_up+arr*LEDARR, Blue);
 323   4                              }
 324   3                              WS_Refresh();
 325   3                              while(Light_up--)
 326   3                              {
 327   4                                      WS_ColorSet_LED(0, LEDNUM, Black);
 328   4                                      for(arr=0;arr<LEDARR;arr++)
 329   4                                      {
 330   5                                              WS_ColorSet_LED(0+arr*LEDARR, Light_up+arr*LEDARR, Blue);
 331   5                                      }
 332   4                                      WS_Refresh();
 333   4                                      Timer1_Delay10ms(10);
 334   4                              }
 335   3                      }
 336   2                      else
 337   2                      {
 338   3      //                      WS_ColorSet_LED(0, LEDNUM, Black);
 339   3      //                      WS_Refresh();
 340   3                      }
 341   2              }
 342   1      }
 343          
 344          
 345          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2528    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    461      65
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
